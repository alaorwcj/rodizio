services:
  rodizio-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rodizio-organistas
    user: "1000:1000"  # Usar mesmo UID/GID que appuser no Dockerfile
    expose:
      - "8090"
    volumes:
      # Volume para persistência do banco de dados JSON
      - ./data:/app/data
      # Volume para desenvolvimento (opcional - comente em produção)
      # - ./templates:/app/templates
      # - ./static:/app/static
    environment:
      - FLASK_ENV=production
      - TZ=America/Sao_Paulo
      - SECRET_KEY=CHANGE_ME_SET_A_STRONG_RANDOM_SECRET
    restart: unless-stopped
    networks:
      - rodizio-network
    # docker-compose.yml (serviço do app)
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8090/login >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx:alpine
    container_name: rodizio-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./data:/app/data
    depends_on:
      - rodizio-app
    restart: unless-stopped
    networks:
      - rodizio-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: rodizio-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  rodizio-network:
    driver: bridge

volumes:
  rodizio-data:
    driver: local
